class Node{

    int data;  // 데이터
    Node next; // 다음 주소

    //LinkedList는 이 Node클래스를 이용해 데이터와 주소를 확인하고 데이터끼리 연결시켜주는 동작 원리를 가지고 있다.
}


public class LinkedListEx {
    public static void main(String[] args) {

        // ArrayList는 배열을 기반으로 프로그래밍 돼있다. 즉 데이터가 늘어나거나 줄어들떄 마다 배열을 복사하고 값을 옮겨주기 위한 메모리 사용이 계속 일어난다.
        // LinkedList는 데이터를 저장할 주소값이 여러개로 이어져있다고 생각하면된다. 추가, 삭제가 어레이리스트보다 빠르다.

        //리스트
        // -배열기반이 아니라 리스트 기반
        // -열차 칸
        // -변수를 만들어서 주소값을 이용해서 만들 수 있다.
        // -시작점에는 데이터를 저장하지 않는다.

        // ArrayList와 LinkedList의 차이. 검색에 있어서 속도 차이가 난다. 배열(ArrayList)은 전체적인 주소값을 가지고 있기 때문에 검색이 빠르고 쉽지만
        // 리스트(LinkedList)는 일렬로 배열의 형태로 데이터를 가지고 있는 것이 아닌 다음 데이터의 주소만 기억하고 있기 때문에 검색에 있어서 조금 느리다.
        // 따라서 어레이리스트는 인덱스가 있고 링크드리스트는 인덱스가 없다.즉 데이터 추가 삭제에서는 링크드리스트가 유리하고 데이터 검색에는 어레이리스트가 유리하다.
    }
}
