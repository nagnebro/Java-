package packtest1;

public class A {
    public static int a;
    private int b;
    int c; //제어자가 없으면 default가 생략이 돼있음.default를 굳이 명시할 수는 없는 것 같기도 하고..? 나중에 추상클래스에서 나왔던 것 같은데.
    // default 제어자는 같은 폴더 안에서만 서로 접근이 가능하다.
    // 접근 제어자
    // 기본값 : 같은 폴더 안에서만 접근이 가능하다.
    // default 제어자가 생략이 돼있다. 입력시 컴파일에러 발생.

    // 접근성 : private
    // 조건 public class로 만들어진 클래스에 extends 클래스명
    // 즉 상속을 하게 되면 객체 생성 및 접근이 가능하다.

}

// 이미 위에 class에서 public 제어자를 갖고 있기 때문에 얘 역시 default class가 된다. 따라서 같은 폴더내에서는 접근이 가능하지만 다른 폴더에서는
// 접근이 불가능하다. 즉 객체생성 및 사용이 불가능하다.
// *******************************주의할 점***************************************
// 여기서 착각하면 안되는 것은 제어자를 통해 다른 패키지에서 접근이 가능하고 안 가능하고의 차이는 import 여부보다 우선적이접근ㅅ. 즉 제어자가 default라면
// import를 해도 다른 패키지의 클래스에 접근할 수 없다. 그러나 public이라면 import를 통해 비로소 접근이 가능하다는 것. 그러니까 제어자가 범위가 우선이고
// 그 이후에 import 여부가 후순위이다.
class A_default{


}